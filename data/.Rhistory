install.packages(pkgs=c("CircStats", "deSolve", "coda", "deldir", "igraph", "RandomFields", "ks"))
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
Install <- TRUE
toInstall <- c("ggplot2", "ggmap", "plyr", "lme4", "rgl", "vegan", "scatterplot3d", "VGAM")
if(Install){
install.packages(toInstall,
dependencies = TRUE,
repos = "http://cran.us.r-project.org")
}
library(ggplot2)
library(ggmap)
library(plyr)
library(ggplot2)
MyData <- data.frame(X = rnorm(100), Y = rnorm(100))
p1     <- ggplot(MyData)
p1     <- p1 + geom_point(aes(x = X,y = Y))
p1     #This should produce a graph.
#data can be read in with read.csv-command and it has headers, T means TRUE.
learning2014<-read.csv("F:/kurssit/GitHub/IODS-project/data/learning2014.csv",header = T)
#data can be read in with read.csv-command and it has headers, T means TRUE.
learning2014<-read.csv("F:/kurssit/GitHub/IODS-project/data/learning2014.csv",header = T)
#str-command lists all the variables in the data, their class and first few observations
str(learning2014)
#dim-command lists the number of rows and columns in the data
dim(learning2014)
#let's take a summary of all the variables
summary(learning2014)
# create a regression model with multiple explanatory variables
my_model2 <- lm(points ~ attitude + stra+surf, data = learning2014)
# print out a summary of the model
summary(my_model2)
#new model with only attitude and stra as explaining variables
my_model3 <- lm(points ~ attitude, data = learning2014)
#summary of the new model
summary(my_model3)
par(mfrow = c(2,2))
plot(my_model2,which=c(1,2,5))
setwd("~/GitHub/IODS-project")
setwd("~/GitHub/IODS-project/data")
#read in data
mat<-read.csv("student-mat.csv",header = T)
#read in data
mat<-read.csv("student-mat.csv",header = T)
View(mat)
#read in data
mat<-read.csv("student-mat.csv",header = T, sep = ";")
por<-read.csv("student-por.csv",header = T, sep = ";")
#checking structure and dimensions of the data
str(mat)
str(por)
dim(mat)
## access the dplyr library
library(dplyr)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
# join the two datasets by the selected identifiers
math_por <- inner_join(math, por, by = join_by)
# join the two datasets by the selected identifiers
math_por <- inner_join(mat, por, by = join_by)
View(math_por)
View(mat)
View(por)
#check structure
str(math_por)
#dimensions
dim(mathpor)
#dimensions
dim(math_por)
# join the two datasets by the selected identifiers
math_por <- inner_join(mat, por, by = join_by,suffix=c(".math",".por"))
#check structure
str(math_por)
#dimensions
dim(math_por)
# print out the column names of 'math_por'
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
colnames(alc)
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
# print out the columns not used for joining
notjoined_columns
View(alc)
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- round(rowMeans(first_column))
}
}
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
# glimpse at the new combined data
glimpse(alc)
