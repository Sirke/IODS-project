alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM2<-loss_func(class = alc3$high_use, prob = alc3$probability)
# call loss_func to compute the average number of wrong predictions
lfM2<-loss_func(class = alc$high_use, prob = alc$probability)
#the second most complicated model
M2<-glm(high_use ~ famrel+absences+studytime+higher+age+activities+nursery+internet+romantic+G3, data = alc, family = "binomial")
summary(M2)
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM2<-loss_func(class = alc$high_use, prob = alc$probability)
#
M3<-glm(high_use ~ famrel +absences+studytime+age+internet+romantic+G3, data = alc, family = "binomial")
summary(M3)
# predict() the probability of high_use
probabilities <- predict(M3, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM3<-loss_func(class = alc$high_use, prob = alc$probability)
#next model, I remove higher, activities and nursery
M4<-glm(high_use ~ absences+studytime, data = alc, family = "binomial")
summary(M4)
# predict() the probability of high_use
probabilities <- predict(M4, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM4<-loss_func(class = alc$high_use, prob = alc$probability)
#
M3<-glm(high_use ~ famrel +absences+studytime+age+internet+romantic+G3, data = alc, family = "binomial")
summary(M3)
# predict() the probability of high_use
probabilities <- predict(M3, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM3<-loss_func(class = alc$high_use, prob = alc$probability)
#next model, I remove higher, activities and nursery
M4<-glm(high_use ~ absences+studytime, data = alc, family = "binomial")
summary(M4)
# predict() the probability of high_use
probabilities <- predict(M4, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM4<-loss_func(class = alc$high_use, prob = alc$probability)
#read in the csv
alc<-read.csv("C:/Users/Sirke Piirainen/Documents/GitHub/IODS-project/data/alc.csv",header = T)
#the most complicated model
M1<-glm(high_use ~ school+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime, data = alc, family = "binomial")
summary(M1)
# predict() the probability of high_use
probabilities <- predict(M1, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM1<-loss_func(class = alc$high_use, prob = alc$probability)
# define a loss function (mean prediction error)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
# call loss_func to compute the average number of wrong predictions
lfM1<-loss_func(class = alc$high_use, prob = alc$probability)
#the second most complicated model
M2<-glm(high_use ~ famrel+absences+studytime+higher+age+activities+nursery+internet+romantic+G3, data = alc, family = "binomial")
summary(M2)
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# call loss_func to compute the average number of wrong predictions
lfM2<-loss_func(class = alc$high_use, prob = alc$probability)
#
M3<-glm(high_use ~ famrel +absences+studytime+age+internet+romantic+G3, data = alc, family = "binomial")
summary(M3)
# predict() the probability of high_use
probabilities <- predict(M3, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM3<-loss_func(class = alc$high_use, prob = alc$probability)
#next model, I remove higher, activities and nursery
M4<-glm(high_use ~ absences+studytime, data = alc, family = "binomial")
summary(M4)
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# call loss_func to compute the average number of wrong predictions
lfM4<-loss_func(class = alc$high_use, prob = alc$probability)
# K-fold cross-validation
library(boot)
#select only the data that I am interested in
choose2<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health")
alc3<-select(alc,one_of(choose2))
cv <- cv.glm(data = alc3, cost = loss_func, glmfit = m, K = 10)
#the most complicated model
M1<-glm(high_use ~ school+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime, data = alc, family = "binomial")
cv <- cv.glm(data = alc3, cost = loss_func, glmfit = M1, K = 10)
#select only the data that I am interested in
choose2<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school")
alc3<-select(alc,one_of(choose2))
#the most complicated model
M1<-glm(high_use ~ school+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime, data = alc, family = "binomial")
cv <- cv.glm(data = alc3, cost = loss_func, glmfit = M1, K = 10)
#select only the data that I am interested in
choose2<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school","sex")
alc3<-select(alc,one_of(choose2))
cv <- cv.glm(data = alc3, cost = loss_func, glmfit = M1, K = 10)
#select only the data that I am interested in
choose2<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school","sex","famsize")
#the most complicated model
M1<-glm(high_use ~ school+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime, data = alc, family = "binomial")
cv <- cv.glm(data = alc3, cost = loss_func, glmfit = M1, K = 10)
#select only the data that I am interested in
choose2<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school","sex","famsize")
alc3<-select(alc,one_of(choose2))
#the most complicated model
M1<-glm(high_use ~ school+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime, data = alc, family = "binomial")
cv <- cv.glm(data = alc3, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
#the most complicated model
M1<-glm(high_use ~ school+higher+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime, data = alc, family = "binomial")
cv <- cv.glm(data = alc3, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
#the most complicated model
M1<-glm(high_use ~ school+higher+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime+famrel, data = alc, family = "binomial")
cv <- cv.glm(data = alc3, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
M1<-glm(high_use ~ school+higher+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime+famrel+activities+romantic+G3+Pstatus, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
#the most complicated model
M2<-glm(high_use ~ school+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = M2, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
cv <- cv.glm(data = alc, cost = loss_func, glmfit = M3, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
cv <- cv.glm(data = alc, cost = loss_func, glmfit = M4, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
#next model, I remove higher, activities and nursery
M4<-glm(high_use ~ absences+studytime, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = M4, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
#
M3<-glm(high_use ~ famrel +absences+studytime+age+internet+romantic+G3, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = M3, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
#select 30 variables
choose2<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school","sex","famsize")
alc3<-select(alc,one_of(choose2))
#select 30 variables
chooseM1<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school","sex","famsize")
alcM1<-select(alc,one_of(choose2))
alcM1<-select(alc,one_of(chooseM1))
#the most complicated model
M1<-glm(high_use ~ school+higher+sex+age+ address+ famsize+ Pstatus+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime+famrel+activities+romantic+G3+Pstatus, data = alc, family = "binomial")
summary(M1)
# predict() the probability of high_use
probabilities <- predict(M1, type = "response")
# add the predicted probabilities to 'alc'
alcM1 <- mutate(alcM1, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM1 <- mutate(alcM1, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM1<-loss_func(class = alcM1$high_use, prob = alcM1$probability)
#cross-validation
cv <- cv.glm(data = alcM1, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
#the most complicated model
M1<-glm(high_use ~ school+higher+sex+age+ address+ famsize+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime+famrel+activities+romantic+G3+Pstatus, data = alc, family = "binomial")
summary(M1)
summary(M1)
# predict() the probability of high_use
probabilities <- predict(M1, type = "response")
# add the predicted probabilities to 'alc'
alcM1 <- mutate(alcM1, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM1 <- mutate(alcM1, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM1<-loss_func(class = alcM1$high_use, prob = alcM1$probability)
#cross-validation
cv <- cv.glm(data = alcM1, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
#####################################################################
#20 variables
chooseM2<-c("high_use","famrel","absences","studytime","activities","nursery", "romantic","address", "reason","guardian","traveltime","failures","paid", "freetime", "goout","health","school","sex","famsize")
alcM2<-select(alc,one_of(chooseM2))
#20 variables
M2<-glm(high_use ~ school+sex+ address+ famsize+ reason+ nursery+ guardian+ traveltime+ failures+ paid+ freetime+ goout+health+absences+studytime+famrel+activities+romantic, data = alc, family = "binomial")
summary(M2)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = M2, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# add the predicted probabilities to 'alc'
alcM2 <- mutate(alcM2, probability = probabilities)
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# add the predicted probabilities to 'alc'
alcM2 <- mutate(alcM2, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM2 <- mutate(alcM2, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM12<-loss_func(class = alcM2$high_use, prob = alcM2$probability)
# call loss_func to compute the average number of wrong predictions
lfM2<-loss_func(class = alcM2$high_use, prob = alcM2$probability)
# average number of wrong predictions in the cross validation
cv$delta[2]
# average number of wrong predictions in the cross validation
cvM1<-cv$delta[1]
#select 30 variables
chooseM1<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school","sex","famsize")
alcM1<-select(alc,one_of(chooseM1))
#the most complicated model
M1<-glm(high_use ~ school+higher+sex+age+ address+ famsize+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime+famrel+activities+romantic+G3+Pstatus, data = alc, family = "binomial")
summary(M1)
# predict() the probability of high_use
probabilities <- predict(M1, type = "response")
# add the predicted probabilities to 'alc'
alcM1 <- mutate(alcM1, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM1 <- mutate(alcM1, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM1<-loss_func(class = alcM1$high_use, prob = alcM1$probability)
#cross-validation
cv <- cv.glm(data = alcM1, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cvM1<-cv$delta[1]
#####################################################################
#20 variables
chooseM2<-c("high_use","famrel","absences","studytime","activities","nursery", "romantic","address", "reason","guardian","traveltime","failures","paid", "freetime", "goout","health","school","sex","famsize")
alcM2<-select(alc,one_of(chooseM2))
#20 variables
M2<-glm(high_use ~ school+sex+ address+ famsize+ reason+ nursery+ guardian+ traveltime+ failures+ paid+ freetime+ goout+health+absences+studytime+famrel+activities+romantic, data = alc, family = "binomial")
summary(M2)
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# add the predicted probabilities to 'alc'
alcM2 <- mutate(alcM2, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM2 <- mutate(alcM2, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM2<-loss_func(class = alcM2$high_use, prob = alcM2$probability)
cvM2<-cv.glm(data = alcM2, cost = loss_func, glmfit = M2, K = 10)
# average number of wrong predictions in the cross validation
cv$delta[1]
cv <- cv.glm(data = alcM2, cost = loss_func, glmfit = M2, K = 10)
# average number of wrong predictions in the cross validation
cvM2<-cv$delta[1]
summary(M2)
##########################################################################3
#10 variables
chooseM3<-c("high_use","famrel","absences","address", "reason","guardian","paid", "goout","sex","famsize")
alcM3<-select(alc,one_of(chooseM3))
#select 30 variables
chooseM1<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school","sex","famsize")
alcM1<-select(alc,one_of(chooseM1))
#the most complicated model
M1<-glm(high_use ~ school+higher+sex+age+ address+ famsize+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime+famrel+activities+romantic+G3+Pstatus, data = alcM1, family = "binomial")
summary(M1)
summary(M1)
# predict() the probability of high_use
probabilities <- predict(M1, type = "response")
# predict() the probability of high_use
probabilities <- predict(M1, type = "response")
# add the predicted probabilities to 'alc'
alcM1 <- mutate(alcM1, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM1 <- mutate(alcM1, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM1<-loss_func(class = alcM1$high_use, prob = alcM1$probability)
#cross-validation
cv <- cv.glm(data = alcM1, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cvM1<-cv$delta[1]
#####################################################################
#20 variables
chooseM2<-c("high_use","famrel","absences","studytime","activities","nursery", "romantic","address", "reason","guardian","traveltime","failures","paid", "freetime", "goout","health","school","sex","famsize")
alcM2<-select(alc,one_of(chooseM2))
#20 variables
M2<-glm(high_use ~ school+sex+ address+ famsize+ reason+ nursery+ guardian+ traveltime+ failures+ paid+ freetime+ goout+health+absences+studytime+famrel+activities+romantic, data = alcM2, family = "binomial")
summary(M2)
summary(M2)
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# add the predicted probabilities to 'alc'
alcM2 <- mutate(alcM2, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM2 <- mutate(alcM2, prediction = probability>0.5)
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# add the predicted probabilities to 'alc'
alcM2 <- mutate(alcM2, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM2 <- mutate(alcM2, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM2<-loss_func(class = alcM2$high_use, prob = alcM2$probability)
cv <- cv.glm(data = alcM2, cost = loss_func, glmfit = M2, K = 10)
# average number of wrong predictions in the cross validation
cvM2<-cv$delta[1]
##########################################################################3
#10 variables
chooseM3<-c("high_use","famrel","absences","address", "reason","guardian","paid", "goout","sex","famsize")
alcM3<-select(alc,one_of(chooseM3))
#10 variables
M3<-glm(high_use ~ sex+ address+ famsize+ reason+ guardian+  paid+  goout+absences+famrel, data = alcM3, family = "binomial")
summary(M3)
# predict() the probability of high_use
probabilities <- predict(M3, type = "response")
# add the predicted probabilities to 'alc'
alcM3 <- mutate(alcM3, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM3 <- mutate(alcM3, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM3<-loss_func(class = alcM3$high_use, prob = alcM3$probability)
cv <- cv.glm(data = alcM3, cost = loss_func, glmfit = M3, K = 10)
# average number of wrong predictions in the cross validation
cvM3<-cv$delta[1]
##########################################################################3
#5 variables
chooseM4<-c("high_use","famrel","absences", "goout","sex")
alcM4<-select(alc,one_of(chooseM4))
#5 variables
M4<-glm(high_use ~ sex+  goout+absences+famrel, data = alcM4, family = "binomial")
summary(M4)
# predict() the probability of high_use
probabilities <- predict(M4, type = "response")
# add the predicted probabilities to 'alc'
alcM4 <- mutate(alcM4, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM4 <- mutate(alcM4, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM4<-loss_func(class = alcM4$high_use, prob = alcM4$probability)
cv <- cv.glm(data = alcM4, cost = loss_func, glmfit = M4, K = 10)
# average number of wrong predictions in the cross validation
cvM4<-cv$delta[1]
names(alc)
#select 30 variables
chooseM1<-c("age","high_use","famrel","absences","studytime","higher","activities","nursery", "internet","romantic","G3","address","Pstatus","Medu","Fedu","Mjob","Fjob", "reason","guardian","traveltime","failures","schoolsup", "famsup","paid", "freetime", "goout","health","school","sex","famsize")
alcM1<-select(alc,one_of(chooseM1))
#the most complicated model
M1<-glm(high_use ~ school+higher+sex+age+ address+ famsize+ Medu+ Fedu+ Mjob+ Fjob+ reason+ nursery+ internet+ guardian+ traveltime+ failures+ schoolsup+ famsup+ paid+ freetime+ goout+ health+absences+studytime+famrel+activities+romantic+G3+Pstatus, data = alcM1, family = "binomial")
summary(M1)
# predict() the probability of high_use
probabilities <- predict(M1, type = "response")
# add the predicted probabilities to 'alc'
alcM1 <- mutate(alcM1, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM1 <- mutate(alcM1, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM1<-loss_func(class = alcM1$high_use, prob = alcM1$probability)
#cross-validation
cv <- cv.glm(data = alcM1, cost = loss_func, glmfit = M1, K = 10)
# average number of wrong predictions in the cross validation
cvM1<-cv$delta[1]
#####################################################################
#20 variables
chooseM2<-c("high_use","famrel","absences","studytime","activities","nursery", "romantic","address", "reason","guardian","traveltime","failures","paid", "freetime", "goout","health","school","sex","famsize")
alcM2<-select(alc,one_of(chooseM2))
#20 variables
M2<-glm(high_use ~ school+sex+ address+ famsize+ reason+ nursery+ guardian+ traveltime+ failures+ paid+ freetime+ goout+health+absences+studytime+famrel+activities+romantic, data = alcM2, family = "binomial")
summary(M2)
# predict() the probability of high_use
probabilities <- predict(M2, type = "response")
# add the predicted probabilities to 'alc'
alcM2 <- mutate(alcM2, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM2 <- mutate(alcM2, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM2<-loss_func(class = alcM2$high_use, prob = alcM2$probability)
cv <- cv.glm(data = alcM2, cost = loss_func, glmfit = M2, K = 10)
# average number of wrong predictions in the cross validation
cvM2<-cv$delta[1]
##########################################################################3
#10 variables
chooseM3<-c("high_use","famrel","absences","address", "reason","guardian","paid", "goout","sex","famsize")
alcM3<-select(alc,one_of(chooseM3))
#10 variables
M3<-glm(high_use ~ sex+ address+ famsize+ reason+ guardian+  paid+  goout+absences+famrel, data = alcM3, family = "binomial")
summary(M3)
# predict() the probability of high_use
probabilities <- predict(M3, type = "response")
# add the predicted probabilities to 'alc'
alcM3 <- mutate(alcM3, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM3 <- mutate(alcM3, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM3<-loss_func(class = alcM3$high_use, prob = alcM3$probability)
cv <- cv.glm(data = alcM3, cost = loss_func, glmfit = M3, K = 10)
# average number of wrong predictions in the cross validation
cvM3<-cv$delta[1]
##########################################################################3
#5 variables
chooseM4<-c("high_use","famrel","absences", "goout","sex")
alcM4<-select(alc,one_of(chooseM4))
#5 variables
M4<-glm(high_use ~ sex+  goout+absences+famrel, data = alcM4, family = "binomial")
summary(M4)
# predict() the probability of high_use
probabilities <- predict(M4, type = "response")
# add the predicted probabilities to 'alc'
alcM4 <- mutate(alcM4, probability = probabilities)
# use the probabilities to make a prediction of high_use
alcM4 <- mutate(alcM4, prediction = probability>0.5)
# call loss_func to compute the average number of wrong predictions
lfM4<-loss_func(class = alcM4$high_use, prob = alcM4$probability)
cv <- cv.glm(data = alcM4, cost = loss_func, glmfit = M4, K = 10)
# average number of wrong predictions in the cross validation
cvM4<-cv$delta[1]
data<-cbind(a,b,c)
a<-1
b<-2
c<-4
data<-cbind(a,b,c)
data
gather(data,key = spec )
gather(data,key = "spec",value = "value" )
#
errors$train=NA
#
Nvariables<-c(5,10,19,30)
errors<-as.data.frame(Nvariables)
View(errors)
errors$train=NA
errors$train[1,]=lfM4
errors$train=lfM4
x[2, 1] = lfM4
errors[2, 1] = lfM4
errors[2, 2] = lfM3
errors[2, 4] = lfM1
errors[2, 3] = lfM2
errors[2, 4] = lfM1
#
Nvariables<-c(5,10,19,30)
errors<-as.data.frame(Nvariables)
errors$train=NA
errors[2, 1] = lfM4
errors[2, 2] = lfM3
errors[2, 3] = lfM2
errors[2, 4] = lfM1
errors<-as.data.frame(Nvariables)
errors$train=NA
errors[1, 2] = lfM4
errors[2, 2] = lfM3
errors[3, 2] = lfM2
errors[4, 2] = lfM1
errors$test=NA
errors[1, 2] = cvM4
errors[2, 2] = cvM3
errors[4, 2] = cvM1
#
Nvariables<-c(5,10,19,30)
errors<-as.data.frame(Nvariables)
errors[1, 2] = lfM4
errors[2, 2] = lfM3
errors[3, 2] = lfM2
errors$test=NA
errors[1, 3] = cvM4
errors[2, 3] = cvM3
errors[3, 3] = cvM2
Nvariables<-c(5,10,19,30)
errors<-as.data.frame(Nvariables)
errors$train=NA
errors[1, 2] = lfM4
errors[2, 2] = lfM3
errors[3, 2] = lfM2
errors[4, 2] = lfM1
errors$test=NA
errors[1, 3] = cvM4
errors[2, 3] = cvM3
errors[3, 3] = cvM2
errors[4, 3] = cvM1
#plot the thing
dfplot <- errors %>% gather(key, value, -Nvariables)
ggplot(dfplot, mapping = aes(x = Nvariables, y = value, color = key) ) + geom_line()
lfm3
# call loss_func to compute the average number of wrong predictions
lfm3<-loss_func(class = alc2$high_use, prob = alc2$probability)
