# MASS, ggplot2 and Boston dataset are available
set.seed(123)
# determine the number of clusters
k_max <- 10
# calculate the total within sum of squares
twcss <- sapply(1:k_max, function(k){kmeans(boston_scaled2, k)$tot.withinss})
# visualize the results
qplot(x = 1:k_max, y = twcss, geom = 'line')
# k-means clustering
km <-kmeans(boston_scaled2, centers = 2)
# plot the Boston dataset with clusters
pairs(boston_scaled2, col = km$cluster)
# plot the Boston dataset with clusters
pairs(boston_scaled2[6:10], col = km$cluster)
# k-means clustering
km <-kmeans(boston_scaled2, centers = 3)
# plot the Boston dataset with clusters
pairs(boston_scaled2[6:10], col = km$cluster)
# plot the Boston dataset with clusters
pairs(boston_scaled2[9:14], col = km$cluster)
# k-means clustering
km <-kmeans(boston_scaled2, centers = 5)
# plot the Boston dataset with clusters
pairs(boston_scaled2[6,10], col = km$cluster)
# k-means clustering
km <-kmeans(boston_scaled2, centers = 2)
# plot the Boston dataset with clusters
pairs(boston_scaled2[6:10], col = km$cluster)
# plot the Boston dataset with clusters
pairs(boston_scaled2[1:6], col = km$cluster)
# plot the Boston dataset with clusters
pairs(boston_scaled2[7:14], col = km$cluster)
# plot the Boston dataset with clusters
pairs(boston_scaled2[9:14], col = km$cluster)
# plot the Boston dataset with clusters
pairs(boston_scaled2[10:14], col = km$cluster)
setwd("~/GitHub/IODS-project/data")
# Read the BPRS data
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
# Look at the (column) names of BPRS
names(BPRS)
# Look at the structure of BPRS
str(BPRS)
# Print out summaries of the variables
summary(BPRS)
# Read the BPRS data
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
# Look at the (column) names of BPRS
names(BPRS)
# Look at the structure of BPRS
str(BPRS)
# Print out summaries of the variables
summary(BPRS)
RATS<-read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt",header = T,sep = ",")
RATS<-read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt",header = T,sep = " ")
# Look at the (column) names of RATS
names(RATS)
# Look at the structure of RATS
str(BPRSRATS)
# Print out summaries of the variables
summary(RATS)
View(RATS)
# Read the RATS data
RATS<-read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt",header = T,sep = "\t")
# Look at the (column) names of RATS
names(RATS)
# Look at the structure of RATS
str(BPRSRATS)
# Print out summaries of the variables
summary(RATS)
# Look at the structure of RATS
str(RATS)
# Access the packages dplyr and tidyr
library(dplyr)
library(tidyr)
# Factor treatment & subject
BPRS$treatment <- factor(BPRS$treatment)
BPRS$subject <- factor(BPRS$subject)
# Factor treatment & subject in RATS
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
# Convert to long form
BPRSL <-  BPRS %>% gather(key = weeks, value = bprs, -treatment, -subject)
View(BPRSL)
View(BPRS)
# Extract the week number
BPRSL <-  BPRSL %>% mutate(week = as.integer(substr("week")))
# Extract the week number
BPRSL <-  BPRSL %>% mutate(week = as.integer(substr(BPRSL$week,5,5)))
# Take a glimpse at the BPRSL data
glimpse(BPRSL)
View(RATS)
RATSL <- RATS %>%
gather(key = WD, value = weight, -ID, -Group) %>%
mutate(Time = as.integer(substr(RATSL$WD,3,4)))
RATSL <- RATS %>%
gather(key = WD, value = weight, -ID, -Group) %>%
mutate(Time = as.integer(substr(RATS$WD,3,4)))
RATSL <- RATS %>%
gather(key = WD, value = weight, -ID, -Group)
RATSL <- RATS %>%
gather(key = WD, value = Weight, -ID, -Group) %>%
mutate(Time = as.integer(substr(WD,3,4)))
# Glimpse the data
glimpse(RATSL)
# Glimpse the data
glimpse(RATSL)
View(RATSL)
#save the data
write.csv(RATSL,"rats.csv",header=T)
#save the data
write.csv(RATSL,"rats.csv")
#save the data
write.csv(RATSL,"rats.csv",row.names = F)
write.csv(BPRSL, "men.csv", row.names = F)
View(BPRS)
View(BPRSL)
read.csv("men.csv",header = T )
BPRSL<-read.csv("men.csv",header = T )
BPRSL<-read.csv("C:/Users/SirkePiirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
setwd("~/GitHub/IODS-project/data")
BPRSL<-read.csv("C:/Users/SirkePiirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
BPRSL<-read.csv("C:/Users/SirkePiirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
read.csv("men.csv",header = T)
BPRSL<-read.csv("C:/Users/SirkePiirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
setwd("~/GitHub/IODS-project/data")
BPRSL<-read.csv("C:/Users/SirkePiirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
BPRSL<-read.csv("C:/Users/Sirke Piirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
#structure and summary of data
str(BPRSL)
summary(BPRSL)
#Access the package ggplot2
library(ggplot2)
ggplot(BPRSL, aes(x = week, y = bprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(BPRSL$bprs), max(BPRSL$bprs)))
#Access the package ggplot2
library(ggplot2)
ggplot(BPRSL, aes(x = week, y = bprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(BPRSL$bprs), max(BPRSL$bprs)))
View(BPRSL)
# Read the BPRS data
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
# Look at the (column) names of BPRS
names(BPRS)
# Look at the structure of BPRS
str(BPRS)
# Print out summaries of the variables
summary(BPRS)
# Read the RATS data
RATS<-read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt",header = T,sep = "\t")
# Look at the (column) names of RATS
names(RATS)
# Look at the structure of RATS
str(RATS)
# Print out summaries of the variables
summary(RATS)
# Access the packages dplyr and tidyr
library(dplyr)
library(tidyr)
# Factor treatment & subject in BPRS
BPRS$treatment <- factor(BPRS$treatment)
BPRS$subject <- factor(BPRS$subject)
# Factor treatment & subject in RATS
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
# Convert to long form
BPRSL <-  BPRS %>% gather(key = weeks, value = bprs, -treatment, -subject)
# Extract the week number
BPRSL <-  BPRSL %>% mutate(week = as.integer(substr(BPRSL$week,5,5)))
# Take a glimpse at the BPRSL data
glimpse(BPRSL)
# Convert data to long form
RATSL <- RATS %>%
gather(key = WD, value = Weight, -ID, -Group) %>%
mutate(Time = as.integer(substr(WD,3,4)))
# Glimpse the data
glimpse(RATSL)
#save the data
write.csv(RATSL,"rats.csv",row.names = F)
write.csv(BPRSL, "men.csv", row.names = F)
#read in data
BPRSL<-read.csv("C:/Users/Sirke Piirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
#structure and summary of data
str(BPRSL)
# Read the BPRS data
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
# Look at the (column) names of BPRS
names(BPRS)
# Look at the structure of BPRS
str(BPRS)
# Print out summaries of the variables
summary(BPRS)
# Read the RATS data
RATS<-read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt",header = T,sep = "\t")
# Look at the (column) names of RATS
names(RATS)
# Look at the structure of RATS
str(RATS)
# Print out summaries of the variables
summary(RATS)
# Access the packages dplyr and tidyr
library(dplyr)
library(tidyr)
# Factor treatment & subject in BPRS
BPRS$treatment <- factor(BPRS$treatment)
BPRS$subject <- factor(BPRS$subject)
# Factor treatment & subject in RATS
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
# Convert to long form
BPRSL <-  BPRS %>% gather(key = weeks, value = bprs, -treatment, -subject)
# Extract the week number
BPRSL <-  BPRSL %>% mutate(week = as.integer(substr(BPRSL$week,5,5)))
# Take a glimpse at the BPRSL data
glimpse(BPRSL)
# Convert data to long form
RATSL <- RATS %>%
gather(key = WD, value = Weight, -ID, -Group) %>%
mutate(Time = as.integer(substr(WD,3,4)))
# Glimpse the data
glimpse(RATSL)
#save the data
write.csv(RATSL,"rats.csv",row.names = F)
write.csv(BPRSL, "men.csv", row.names = F)
read.csv("men.csv",header = T)
c<-read.csv("men.csv",header = T)
#read in data
BPRSL<-read.csv("C:/Users/Sirke Piirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
#structure and summary of data
str(BPRSL)
summary(BPRSL)
# Factor treatment & subject in BPRS
BPRSL$treatment <- factor(BPRS$treatment)
BPRSL$subject <- factor(BPRS$subject)
ggplot(BPRSL, aes(x = week, y = bprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(BPRSL$bprs), max(BPRSL$bprs)))
BPRSL <- BPRSL %>%
group_by(week) %>%
mutate(stdbprs = scale(bprs)) %>%
ungroup()
#check the results
glimpse(BPRSL)
# Plot again with the standardised bprs
ggplot(BPRSL, aes(x = week, y = stdbprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
scale_y_continuous(name = "standardized bprs")
# Number of weeks, baseline (week 0) included
n <- BPRSL$week %>% unique() %>% length()
# Summary data with mean and standard error of bprs by treatment and week
BPRSS <- BPRSL %>%
group_by(treatment, week) %>%
summarise( mean = mean(bprs), se = sd(bprs)/sqrt(n) ) %>%
ungroup()
# Glimpse the data
glimpse(BPRSS)
# Plot the mean profiles
ggplot(BPRSS, aes(x = week, y = mean, linetype = treatment, shape = treatment)) +
geom_line() +
scale_linetype_manual(values = c(1,2)) +
geom_point(size=3) +
scale_shape_manual(values = c(1,2)) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se, linetype="1"), width=0.3) +
theme(legend.position = c(0.8,0.8)) +
scale_y_continuous(name = "mean(bprs) +/- se(bprs)")
BPRSL8S <- BPRSL %>%
filter(week > 0) %>%
group_by(treatment, subject) %>%
summarise( mean=mean(bprs) ) %>%
ungroup()
# Glimpse the data
glimpse(BPRSL8S)
# Draw a boxplot of the mean versus treatment
ggplot(BPRSL8S, aes(x = treatment, y = mean)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(bprs), weeks 1-8")
# Create a new data by filtering the outlier and adjust the ggplot code the draw the plot again with the new data
BPRSL8S1 <- BPRSL8S %>%
filter(mean < 70)
glimpse(BPRSL8S1)
ggplot(BPRSL8S1, aes(x = treatment, y = mean)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(bprs), weeks 1-8")
# Create a summary data by treatment and subject with mean as the summary variable (ignoring baseline week 0).
BPRSL8S <- BPRSL %>%
filter(week > 0) %>%
group_by(treatment, subject) %>%
summarise( mean=mean(bprs) ) %>%
ungroup()
# Glimpse the data
glimpse(BPRSL8S)
# Draw a boxplot of the mean versus treatment
ggplot(BPRSL8S, aes(x = treatment, y = mean)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(bprs), weeks 1-8")
View(BPRSL)
# Create a new data by filtering the outlier and adjust the ggplot code the draw the plot again with the new data
BPRSL8S1 <- BPRSL8S %>%
filter(mean < 70)
glimpse(BPRSL8S1)
ggplot(BPRSL8S1, aes(x = treatment, y = mean)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(bprs), weeks 1-8")
# Perform a two-sample t-test
t.test(mean ~ treatment, data = BPRSL8S1, var.equal = TRUE)
BPRSL8S2 <- BPRSL8S %>%
mutate(baseline = BPRS$week0)
# Fit the linear model with the mean as the response
fit <- lm(mean~baseline+treatment, data = BPRSL8S2)
# Compute the analysis of variance table for the fitted model with anova()
summary(fit)
library(magrittr)
BPRSL <- BPRSL %>%
group_by(week) %>%
mutate(stdbprs = scale(bprs)) %>%
ungroup()
library(dplyr)
library(tidyr)
BPRSL8S2 <- BPRSL8S %>%
mutate(baseline = BPRSL$week0)
BPRSL8S2 <- BPRSL8S %>%
mutate(baseline = BPRS$week0)
#read in data
BPRSL<-read.csv("C:/Users/Sirke Piirainen/Documents/GitHub/IODS-project/data/men.csv",header = T)
#structure and summary of data
str(BPRSL)
summary(BPRSL)
# Factor treatment & subject in BPRS
BPRSL$treatment <- factor(BPRSL$treatment)
BPRSL$subject <- factor(BPRSL$subject)
#Access the package ggplot2
library(ggplot2)
# Draw the plot
ggplot(BPRSL, aes(x = week, y = bprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(BPRSL$bprs), max(BPRSL$bprs)))
library(magrittr)
library(dplyr)
library(tidyr)
# Standardise the variable bprs
BPRSL <- BPRSL %>%
group_by(week) %>%
mutate(stdbprs = scale(bprs)) %>%
ungroup()
#check the results
glimpse(BPRSL)
# Plot again with the standardised bprs
ggplot(BPRSL, aes(x = week, y = stdbprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
scale_y_continuous(name = "standardized bprs")
# Number of weeks, baseline (week 0) included
n <- BPRSL$week %>% unique() %>% length()
# Summary data with mean and standard error of bprs by treatment and week
BPRSS <- BPRSL %>%
group_by(treatment, week) %>%
summarise( mean = mean(bprs), se = sd(bprs)/sqrt(n) ) %>%
ungroup()
# Glimpse the data
glimpse(BPRSS)
# Plot the mean profiles
ggplot(BPRSS, aes(x = week, y = mean, linetype = treatment, shape = treatment)) +
geom_line() +
scale_linetype_manual(values = c(1,2)) +
geom_point(size=3) +
scale_shape_manual(values = c(1,2)) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se, linetype="1"), width=0.3) +
theme(legend.position = c(0.8,0.8)) +
scale_y_continuous(name = "mean(bprs) +/- se(bprs)")
# Create a summary data by treatment and subject with mean as the summary variable (ignoring baseline week 0).
BPRSL8S <- BPRSL %>%
filter(week > 0) %>%
group_by(treatment, subject) %>%
summarise( mean=mean(bprs) ) %>%
ungroup()
# Glimpse the data
glimpse(BPRSL8S)
# Draw a boxplot of the mean versus treatment
ggplot(BPRSL8S, aes(x = treatment, y = mean)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(bprs), weeks 1-8")
# Create a new data by filtering the outlier and adjust the ggplot code the draw the plot again with the new data
BPRSL8S1 <- BPRSL8S %>%
filter(mean < 70)
glimpse(BPRSL8S1)
ggplot(BPRSL8S1, aes(x = treatment, y = mean)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(bprs), weeks 1-8")
# Perform a two-sample t-test
t.test(mean ~ treatment, data = BPRSL8S1, var.equal = TRUE)
View(BPRSL)
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
BPRSL8S2 <- BPRSL8S %>%
mutate(baseline = BPRS$week0)
```{r}
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
# Add the baseline from the original data as a new variable to the summary data
BPRSL8S2 <- BPRSL8S %>%
mutate(baseline = BPRS$week0)
# Fit the linear model with the mean as the response
fit <- lm(mean~baseline+treatment, data = BPRSL8S2)
# Compute the analysis of variance table for the fitted model with anova()
summary(fit)
#read in data
RATSL<-read.csv("C:/Users/Sirke Piirainen/Documents/GitHub/IODS-project/data/rats.csv",header = T)
#structure and summary of data
str(RATSL)
summary(RATSL)
# Factor ID and Group
RATSL$ID <- factor(RATSL$ID)
RATSL$Group<- factor(RATSL$Group)
#read in data
RATSL<-read.csv("C:/Users/Sirke Piirainen/Documents/GitHub/IODS-project/data/rats.csv",header = T)
#structure and summary of data
str(RATSL)
summary(RATSL)
# Factor ID and Group
RATSL$ID <- factor(RATSL$ID)
RATSL$Group<- factor(RATSL$Group)
#read in data
RATSL<-read.csv("C:/Users/Sirke Piirainen/Documents/GitHub/IODS-project/data/rats.csv",header = T)
# Factor ID and Group
RATSL$ID <- factor(RATSL$ID)
RATSL$Group<- factor(RATSL$Group)
#structure and summary of data
str(RATSL)
summary(RATSL)
# Plot the RATSL data
ggplot(RATSL, aes(x = Time, y = Weight, group = ID)) +
geom_line(aes(linetype=Group))+scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 10))+scale_y_continuous(name = "Weight (grams)")+theme(legend.position = "top")
# create a regression model RATS_reg
RATS_reg <- lm(Weight~Time+Group,data=RATSL)
# print out a summary of the model
summary(RATS_reg)
# access library lme4
library(lme4)
# Create a random intercept model
RATS_ref <- lmer(Weight ~ Time + Group + (1 | ID), data = RATSL, REML = FALSE)
# Print the summary of the model
summary(RATS_ref)
RATS_ref1 <- lmer(Weight ~ Time + Group + (Time | ID), data = RATSL, REML = FALSE)
# print a summary of the model
summary(RATS_ref1)
# perform an ANOVA test on the two models
anova(RATS_ref1, RATS_ref)
# create a random intercept and random slope model with the interaction
RATS_ref2 <- lmer(Weight ~ Time + Group + Time*Group + (Time | ID), data = RATSL, REML = FALSE)
# print a summary of the model
summary(RATS_ref2)
# perform an ANOVA test on the two models
anova(RATS_ref2, RATS_ref1)
# perform an ANOVA test on the two models
anova(RATS_ref2, RATS_ref1)
# draw the plot of RATSL with the observed Weight values
ggplot(RATSL, aes(x = Time, y = Weight, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Observed weight (grams)") +
theme(legend.position = "top")
# Create a vector of the fitted values
Fitted <- fitted(RATS_ref2)
# Create a new column fitted to RATSL
RATSL<-mutate(RATSL,Fitted)
str(RATSL)
# draw the plot of RATSL with the Fitted values of weight
ggplot(RATSL, aes(x = Time, y = Fitted, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted weight (grams)") +
theme(legend.position = "top")
ggplot(RATSL, aes(x = Time, y = Weight, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Observed weight (grams)") +
theme(legend.position = "top")
# Create a vector of the fitted values
Fitted <- fitted(RATS_ref2)
# Create a new column fitted to RATSL
RATSL<-mutate(RATSL,Fitted)
# draw the plot of RATSL with the Fitted values of weight
ggplot(RATSL, aes(x = Time, y = Fitted, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted weight (grams)") +
theme(legend.position = "top")
# create a random intercept and random slope model with the interaction
RATS_ref2 <- lmer(Weight ~ Time + Group + Time*Group + (Time | ID), data = RATSL, REML = FALSE)
# print a summary of the model
summary(RATS_ref2)
